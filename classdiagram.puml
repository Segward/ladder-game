@startuml

class Game {
    -players: ArrayList<Player>
    -board: Board
    -dice: Dice
    -currentPlayer: Player
    -currentPlayerIndex: int
    +createBoard()
    +createDice()
    +addPlayer(Player player)
    +startGame()
    +nextTurn()
    +getBoard(): Board
    +getDice(): Dice
    +getCurrentPlayer(): Player
    +getCurrentPlayerIndex(): int
    +getPlayers(): ArrayList<Player>
}

class Player {
    -name: String
    -figure: Figure
    -position: int
    +Player(String name, Figure figure)
    +move(int steps)
    +setPosition(int position)
    +getName(): String
    +getFigure(): Figure
    +getPosition(): int
}

class Figure {
    -color: String
    +Figure(String color)
    +getColor(): String
}

class Board {
    -tiles: HashMap<Integer, Tile>
    +Board()
    +addTile(int number, Tile tile)
    +setTileAction(int number, TileAction action)
    +getTile(int number): Tile
    +getTileCount(): int
}

class Dice {
    -sides: int
    +Dice(int sides)
    +roll(): int
    +getSides(): int
}

class Tile {
    -action: TileAction
    -position: int
    +Tile(int position, TileAction action)
    +Tile(int position)
    +hasAction(): boolean
    +getAction(): TileAction
    +getPosition(): int
}

class TileAction {
    -action: String
    +TileAction(String action)
    +getAction(): String
    +execute(Player player)
}

class LadderAction {
    -destination: int
    +LadderAction(String action, int destination)
    +execute(Player player)
}

Game *-left- Player: composition
Game *-- Board: composition
Game *-right- Dice: composition
Player *-- Figure: composition
Board *-right- Tile: composition
Tile *-- TileAction: composition
TileAction --|> LadderAction: extends

@enduml