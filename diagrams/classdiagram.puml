@startuml
skinparam linetype ortho

class App {
    +void start(Stage primaryStage)
    +main(String[] args)
}

package view {

}

package controller {

}

package model {

}

package observer {
    
}

class BoardFactory {
    -{static} Board makeBoard(String name)
    +{static} void makeLadderBoards()
    -{static} Board makeQuizBoard(String name)
    +{static} void makeQuizBoard()
}

class BoardReader {
    -{static} final String quizBoardPath
    -{static} final String ladderBoardPath
    +{static} HashSet<Board> getQuizBoards()
    +{static} HashSet<Board> getLadderBoards()
}

class BoardWriter {
    -{static} final String ladderBoardPath
    -{static} final String quizBoardPath
    +{static} void saveLadderBoards(HashSet<Board> boards)
    +{static} void saveQuizBoards(HashSet<Board> boards)
}

class FigureFactory {
    +{static} void makeFigures()
}

class FigureReader {
    -{static} final String path
    +{static} HashSet<Figure> getFigures()
    +{static} HashSet<Figure> getAvailableFigures()
}

class FigureWriter {
    -{static} final String path
    +{static} void saveFigures(HashSet<Figure> figures)
}

class PlayerReader {
    -{static} final String playerPath
    -{static} final String figureResourcePath
    +{static} HashSet<Player> getPlayers()
}

class PlayerWriter {
    -{static} final String path;
    -{static} final String figures;
    +{static} void savePlayers(HashSet<Player> players)
    +{static} void addPlayer(Player player)
    -{static} void wipePlayerFile()
    +{static} void removePlayer(Player player)
    +{static} void loadPlayersFromFile(String filePath)
    +{static} void savePlayersToFile(String filePath)
}

class CsvUtil {
    +{static} void writeFile(String filePath, String data)
    +{static} String readFile(String filePath)
}

class FileUtil {
    +{static} boolean fileExists(String filePath)
    +{static} void createFile(String filePath)
}

class GsonUtil {
    -{static} final Gson gson
    +{static} <T> void writeFile(String filePath, HashSet<T> objects)
    +{static} <T> HashSet<T> readFile(String filePath, Type type)
}

class DataCreateException {
    +DataCreateException(String message)
    +DataCreateException(String message, Throwable cause)
}

class DataReadException {
    +DataReadException(String message)
    +DataReadException(String message, Throwable cause)
}

class DataWriteException {
    +DataWriteException(String message)
    +DataWriteException(String message, Throwable cause)
}

App -right-> view 
view -right-> controller
controller --> model
controller ..|> observer
model --> observer

controller --> BoardFactory
controller --> FigureFactory
controller --> BoardReader
controller --> FigureReader
controller --> PlayerReader
controller --> PlayerWriter
BoardFactory --> BoardWriter
FigureFactory --> FigureWriter

BoardReader --> GsonUtil
BoardWriter --> GsonUtil
FigureReader --> CsvUtil
FigureWriter --> CsvUtil
PlayerReader --> CsvUtil
PlayerWriter --> CsvUtil

GsonUtil --> DataReadException
GsonUtil --> DataWriteException
CsvUtil --> DataReadException
CsvUtil --> DataWriteException

CsvUtil --> FileUtil
GsonUtil --> FileUtil
PlayerWriter --> FileUtil
FileUtil --> DataCreateException

note top of view
    BoardSelection
    Configuration
    LadderGame
    MainFrame
    PlayerCreation
    QuizGame
    TicTacToe
    UserInterface
end note

note right of controller
    BoardController
    BoardSelectionController
    ConfigurationController
    GameController
    LadderGameController
    PlayerCreationController
    QuizGameController
    TicTacToeController
end note

note left of model
    ExtraDiceAction
    LadderAction
    QuestionAction
    TileAction
    Board
    Dice
    Die
    Figure
    LadderGame
    Player
    QuizGame
    TicTacToe
    Tile
    TileActionAdapter
    Vector2
end note

note left of observer
    LadderGameObserver
    QuizGameObserver
    TicTacToeObserver
end note

@enduml